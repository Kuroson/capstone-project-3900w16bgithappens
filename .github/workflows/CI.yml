# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Continuous Integration

on:
  push:
    branches:
      - master
      - staging
  pull_request:

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
          cache-dependency-path: ./backend/pnpm.lock
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Lint
        run: pnpm lint
      - name: Prettier
        run: pnpm prettier
      - name: Build
        env:
          FIREBASE_PRIVATE_KEY: ${{ secrets.BACKEND_FIREBASE_PRIVATE_KEY }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
          MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          EMAIL_ENABLE: false
        run: pnpm build
      - name: Start local MongoDB
        run: docker compose -f "../docker-compose.local.yml" up -d mongodb
      - name: Wait 10 seconds for it to be healthy
        run: sleep 10
      - name: Start test
        env:
          FIREBASE_PRIVATE_KEY: ${{ secrets.BACKEND_FIREBASE_PRIVATE_KEY }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
          MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          EMAIL_ENABLE: false
          USE_LOCAL_MONGO: true
          USE_DOCKER_INTERNAL_MONGO: false
        run: yarn test -t
      - name: Stop docker compose
        if: always()
        run: docker compose -f "../docker-compose.local.yml" down
  # backend-deploy:
  #   runs-on: ubuntu-latest
  #   needs: [backend]
  #   defaults:
  #     run:
  #       working-directory: ./backend
  #   if: github.ref == 'refs/heads/master'
  #   strategy:
  #     matrix:
  #       node-version: [18.x]
  #       # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
  #   environment:
  #     name: Backend Production
  #     url: https://www.unswmtrnsoc.com
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         cache: "yarn"
  #         cache-dependency-path: ./backend/yarn.lock
  #     - name: Install dependencies
  #       run: yarn --frozen-lockfile
  #     - name: Build
  #       env:
  #         FIREBASE_PRIVATE_KEY: ${{ secrets.BACKEND_FIREBASE_PRIVATE_KEY }}
  #         FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
  #         FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
  #         MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
  #         MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
  #         SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
  #         EMAIL_ENABLE: false
  #       run: yarn build
  #     - name: Dump backend env
  #       env:
  #         FIREBASE_PRIVATE_KEY: ${{ secrets.BACKEND_FIREBASE_PRIVATE_KEY }}
  #         FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
  #         FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
  #         MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
  #         MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
  #         SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
  #         EMAIL_ENABLE: false
  #       run: env >> .env
  #     - name: Generate deployment package
  #       run: zip -r deploy.zip . -x '*.git*'
  #     - name: Get timestamp
  #       uses: gerred/actions/current-time@master
  #       id: current-time
  #     - name: Run string replace
  #       uses: frabert/replace-string-action@master
  #       id: format-time
  #       with:
  #         pattern: '[:\.]+'
  #         string: "${{ steps.current-time.outputs.time }}"
  #         replace-with: "-"
  #         flags: "g"
  #     - name: Deploy to EB
  #       uses: einaregilsson/beanstalk-deploy@v21
  #       with:
  #         aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }} # Add this to secret
  #         aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # Add this to secret
  #         application_name: alvin-webserver # Look for in .ebextensions/config.yml
  #         environment_name: githappens-backend # Look for in .ebextensions/config.yml
  #         version_label: "version-label-${{ steps.format-time.outputs.replaced }}"
  #         region: ap-southeast-2
  #         deployment_package: ./backend/deploy.zip
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
          cache-dependency-path: ./frontend/pnpm.lock
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Lint
        run: pnpm lint
      - name: Prettier
        run: pnpm prettier
      - name: Build
        env:
          FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
          COOKIE_SECRET_CURRENT: "whatever"
          COOKIE_SECRET_PREVIOUS: "whateverPrev"
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          NEXT_PUBLIC_FIREBASE_DATABASE_URL: ${{ secrets.NEXT_PUBLIC_FIREBASE_DATABASE_URL }}
          NEXT_PUBLIC_COOKIE_SECURE: false
        run: pnpm build
  e2e-testing:
    runs-on: ubuntu-latest
    # needs: [frontend, backend]
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
          cache-dependency-path: ./frontend/pnpm.lock
      - name: Install frontend dependencies
        working-directory: "./frontend"
        run: pnpm install --frozen-lockfile
      - name: Dump backend env
        working-directory: "./backend"
        env:
          FIREBASE_PRIVATE_KEY: ${{ secrets.BACKEND_FIREBASE_PRIVATE_KEY }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
          MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          EMAIL_ENABLE: false
        run: env >> .env
      - name: Dump frontend env
        working-directory: "./frontend"
        env:
          FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
          COOKIE_SECRET_CURRENT: "whatever"
          COOKIE_SECRET_PREVIOUS: "whateverPrev"
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          NEXT_PUBLIC_FIREBASE_DATABASE_URL: ${{ secrets.NEXT_PUBLIC_FIREBASE_DATABASE_URL }}
          NEXT_PUBLIC_COOKIE_SECURE: false
        run: env >> .env.local
      - name: Docker compose build
        run: docker compose -f "docker-compose.local.yml" build
      - name: Cypress e2e
        working-directory: "./frontend"
        run: |
          yarn start-server-and-test "docker compose -f \"../docker-compose.local.yml\" up" http://localhost:3000 cypress:headless
      - name: Stop docker compose
        if: always()
        run: docker compose -f "docker-compose.local.yml" down
